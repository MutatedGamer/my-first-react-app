'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp2;

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _lib = require('../../lib');

var _Portal = require('../../addons/Portal');

var _Portal2 = _interopRequireDefault(_Portal);

var _DimmerDimmable = require('./DimmerDimmable');

var _DimmerDimmable2 = _interopRequireDefault(_DimmerDimmable);

var _DimmerInner = require('./DimmerInner');

var _DimmerInner2 = _interopRequireDefault(_DimmerInner);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * A dimmer hides distractions to focus attention on particular content.
 */
var Dimmer = (_temp2 = _class = function (_Component) {
  _inherits(Dimmer, _Component);

  function Dimmer() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, Dimmer);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Dimmer.__proto__ || Object.getPrototypeOf(Dimmer)).call.apply(_ref, [this].concat(args))), _this), _this.handlePortalMount = function () {
      if (!(0, _lib.isBrowser)()) return;

      // Heads up, IE doesn't support second argument in add()
      document.body.classList.add('dimmed');
      document.body.classList.add('dimmable');
    }, _this.handlePortalUnmount = function () {
      if (!(0, _lib.isBrowser)()) return;

      // Heads up, IE doesn't support second argument in add()
      document.body.classList.remove('dimmed');
      document.body.classList.remove('dimmable');
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(Dimmer, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          active = _props.active,
          page = _props.page;

      var rest = (0, _lib.getUnhandledProps)(Dimmer, this.props);

      if (page) {
        return _react2.default.createElement(
          _Portal2.default,
          {
            closeOnEscape: false,
            closeOnDocumentClick: false,
            onMount: this.handlePortalMount,
            onUnmount: this.handlePortalUnmount,
            open: active,
            openOnTriggerClick: false
          },
          _react2.default.createElement(_DimmerInner2.default, Object.assign({}, rest, { active: active, page: page }))
        );
      }

      return _react2.default.createElement(_DimmerInner2.default, Object.assign({}, rest, { active: active, page: page }));
    }
  }]);

  return Dimmer;
}(_react.Component), _class.propTypes = {
  /** An active dimmer will dim its parent container. */
  active: _propTypes2.default.bool,

  /** A dimmer can be formatted to be fixed to the page. */
  page: _propTypes2.default.bool
}, _class.Dimmable = _DimmerDimmable2.default, _class.Inner = _DimmerInner2.default, _temp2);
exports.default = Dimmer;


Dimmer.create = (0, _lib.createShorthandFactory)(Dimmer, function (value) {
  return { content: value };
});

//# sourceMappingURL=Dimmer.js.map