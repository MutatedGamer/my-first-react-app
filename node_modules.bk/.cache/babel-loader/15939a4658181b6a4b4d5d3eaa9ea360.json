{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isNil = exports.findByType = exports.someByType = undefined;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _react = require('react');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Determine if child by type exists in children.\n * @param {Object} children The children prop of a component.\n * @param {string|Function} type An html tag name string or React component.\n * @returns {Boolean}\n */\n\n\nvar someByType = exports.someByType = function someByType(children, type) {\n  return _lodash2.default.some(_react.Children.toArray(children), {\n    type: type\n  });\n};\n/**\n * Find child by type.\n * @param {Object} children The children prop of a component.\n * @param {string|Function} type An html tag name string or React component.\n * @returns {undefined|Object}\n */\n\n\nvar findByType = exports.findByType = function findByType(children, type) {\n  return _lodash2.default.find(_react.Children.toArray(children), {\n    type: type\n  });\n};\n/**\n * Tests if children are nil in React and Preact.\n * @param {Object} children The children prop of a component.\n * @returns {Boolean}\n */\n\n\nvar isNil = exports.isNil = function isNil(children) {\n  return children === null || children === undefined || Array.isArray(children) && children.length === 0;\n};","map":null,"metadata":{},"sourceType":"script"}