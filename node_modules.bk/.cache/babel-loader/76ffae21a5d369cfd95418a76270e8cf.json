{"ast":null,"code":"import _objectWithoutProperties from \"/home/lukebord/react/react-firebase-authentication/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/lukebord/react/react-firebase-authentication/src/components/TimePicker/ReactBootstrapTimePicker.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form } from 'react-bootstrap';\nimport { timeToInt, timeFromInt } from 'time-number';\nvar propTypes = {\n  end: PropTypes.string,\n  format: PropTypes.number,\n  initialValue: PropTypes.any,\n  onChange: PropTypes.func,\n  start: PropTypes.string,\n  step: PropTypes.number,\n  value: PropTypes.any\n};\n\nfunction TimePicker(_ref) {\n  var _ref$end = _ref.end,\n      end = _ref$end === void 0 ? '23:59' : _ref$end,\n      _ref$format = _ref.format,\n      format = _ref$format === void 0 ? 12 : _ref$format,\n      _ref$initialValue = _ref.initialValue,\n      initialValue = _ref$initialValue === void 0 ? '00:00' : _ref$initialValue,\n      _ref$onChange = _ref.onChange,\n      _onChange = _ref$onChange === void 0 ? function (e) {\n    return e;\n  } : _ref$onChange,\n      _ref$start = _ref.start,\n      start = _ref$start === void 0 ? '00:00' : _ref$start,\n      _ref$step = _ref.step,\n      step = _ref$step === void 0 ? 30 : _ref$step,\n      _ref$value = _ref.value,\n      value = _ref$value === void 0 ? '32400' : _ref$value,\n      rest = _objectWithoutProperties(_ref, [\"end\", \"format\", \"initialValue\", \"onChange\", \"start\", \"step\", \"value\"]);\n\n  function generateFormattedTime(time) {\n    var ret = timeFromInt(time, false);\n\n    if (format === 24) {\n      return ret;\n    }\n\n    var found = ret.match(/^(\\d+):/);\n    var hour = parseInt(found[1], 10);\n\n    if (hour === 0) {\n      return \"\".concat(ret.replace(/^\\d+/, '12'), \" AM\");\n    } else if (hour < 12) {\n      return \"\".concat(ret, \" AM\");\n    } else if (hour === 12) {\n      return \"\".concat(ret, \" PM\");\n    }\n\n    var newHour = hour < 22 ? \"0\".concat(hour - 12) : (hour - 12).toString();\n    return \"\".concat(ret.replace(/^\\d+/, newHour), \" PM\");\n  }\n\n  function generateTimeRange() {\n    var times = [];\n    var iend = timeToInt(end, false);\n\n    for (var i = timeToInt(start, false); i <= iend; i += step * 60) {\n      times.push(i);\n    }\n\n    return times;\n  }\n\n  function listTimeOptions() {\n    return generateTimeRange().map(function (unformattedTime) {\n      var formattedTime = generateFormattedTime(unformattedTime);\n      return {\n        key: unformattedTime,\n        val: formattedTime\n      };\n    });\n  }\n\n  var timeOptions = listTimeOptions();\n  var optionWidgets = timeOptions.map(function (_ref2) {\n    var key = _ref2.key,\n        val = _ref2.val;\n    return React.createElement(\"option\", {\n      key: key,\n      value: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, val);\n  });\n  var currentValue = value || initialValue;\n\n  try {\n    currentValue = timeToInt(currentValue);\n  } catch (ex) {\n    currentValue = parseInt(currentValue, 10);\n  }\n\n  if (!timeOptions.filter(function (_ref3) {\n    var key = _ref3.key;\n    return currentValue === key;\n  }).length) {\n    currentValue = timeToInt(start);\n  }\n\n  return React.createElement(Form.Control, Object.assign({\n    as: \"select\",\n    onChange: function onChange(e) {\n      e.preventDefault();\n\n      _onChange(parseInt(e.target.value, 10));\n    },\n    value: currentValue\n  }, rest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), optionWidgets);\n}\n\nTimePicker.propTypes = propTypes;\nexport default TimePicker;","map":{"version":3,"sources":["/home/lukebord/react/react-firebase-authentication/src/components/TimePicker/ReactBootstrapTimePicker.jsx"],"names":["React","PropTypes","Form","timeToInt","timeFromInt","propTypes","end","string","format","number","initialValue","any","onChange","func","start","step","value","TimePicker","e","rest","generateFormattedTime","time","ret","found","match","hour","parseInt","replace","newHour","toString","generateTimeRange","times","iend","i","push","listTimeOptions","map","unformattedTime","formattedTime","key","val","timeOptions","optionWidgets","currentValue","ex","filter","length","preventDefault","target"],"mappings":"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","sourcesContent":["import React                      from 'react';\nimport PropTypes                  from 'prop-types';\nimport { Form }                   from 'react-bootstrap';\nimport { timeToInt, timeFromInt } from 'time-number';\n\nconst propTypes = {\n  end:          PropTypes.string,\n  format:       PropTypes.number,\n  initialValue: PropTypes.any,\n  onChange:     PropTypes.func,\n  start:        PropTypes.string,\n  step:         PropTypes.number,\n  value:        PropTypes.any,\n};\n\nfunction TimePicker({\n  end           = '23:59',\n  format        = 12,\n  initialValue  = '00:00',\n  onChange      = (e) => {return e;},\n  start         = '00:00',\n  step          = 30,\n  value         = '32400',\n  ...rest\n}) {\n  function generateFormattedTime(time) {\n    const ret = timeFromInt(time, false);\n\n    if (format === 24) {\n      return ret;\n    }\n\n    const found = ret.match(/^(\\d+):/);\n    const hour  = parseInt(found[1], 10);\n\n    if (hour === 0) {\n      return `${ret.replace(/^\\d+/, '12')} AM`;\n    } else if (hour < 12) {\n      return `${ret} AM`;\n    } else if (hour === 12) {\n      return `${ret} PM`;\n    }\n\n    const newHour = hour < 22 ? `0${hour - 12}` : (hour - 12).toString();\n\n    return `${ret.replace(/^\\d+/, newHour)} PM`;\n  }\n\n  function generateTimeRange() {\n    const times = [];\n    const iend  = timeToInt(end, false);\n\n    for (let i = timeToInt(start, false); i <= iend; i += step * 60) {\n      times.push(i);\n    }\n\n    return times;\n  }\n\n  function listTimeOptions() {\n    return generateTimeRange().map((unformattedTime) => {\n      const formattedTime = generateFormattedTime(unformattedTime);\n\n      return {\n        key: unformattedTime,\n        val: formattedTime,\n      };\n    });\n  }\n\n  const timeOptions   = listTimeOptions();\n  const optionWidgets = timeOptions.map(({ key, val }) => (\n    <option key={key} value={key}>\n      {val}\n    </option>\n  ));\n\n  let currentValue = value || initialValue;\n\n  try {\n    currentValue = timeToInt(currentValue);\n  } catch (ex) {\n    currentValue = parseInt(currentValue, 10);\n  }\n\n  if (!timeOptions.filter(({ key }) => currentValue === key).length) {\n    currentValue = timeToInt(start);\n  }\n\n  return (\n    <Form.Control\n      as = \"select\"\n      onChange        = {(e) => { e.preventDefault(); onChange(parseInt(e.target.value, 10)); }}\n      value           = {currentValue}\n      {...rest}\n    >\n      {optionWidgets}\n    </Form.Control>\n  );\n}\n\nTimePicker.propTypes = propTypes;\n\nexport default TimePicker;\n"]},"metadata":{},"sourceType":"module"}