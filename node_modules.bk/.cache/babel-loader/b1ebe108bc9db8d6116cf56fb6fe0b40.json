{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _Card = require('./Card');\n\nvar _Card2 = _interopRequireDefault(_Card);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * A group of cards.\n */\n\n\nfunction CardGroup(props) {\n  var centered = props.centered,\n      children = props.children,\n      className = props.className,\n      content = props.content,\n      doubling = props.doubling,\n      items = props.items,\n      itemsPerRow = props.itemsPerRow,\n      stackable = props.stackable,\n      textAlign = props.textAlign;\n  var classes = (0, _classnames2.default)('ui', (0, _lib.useKeyOnly)(centered, 'centered'), (0, _lib.useKeyOnly)(doubling, 'doubling'), (0, _lib.useKeyOnly)(stackable, 'stackable'), (0, _lib.useTextAlignProp)(textAlign), (0, _lib.useWidthProp)(itemsPerRow), 'cards', className);\n  var rest = (0, _lib.getUnhandledProps)(CardGroup, props);\n  var ElementType = (0, _lib.getElementType)(CardGroup, props);\n\n  if (!_lib.childrenUtils.isNil(children)) {\n    return _react2.default.createElement(ElementType, Object.assign({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  if (!_lib.childrenUtils.isNil(content)) {\n    return _react2.default.createElement(ElementType, Object.assign({}, rest, {\n      className: classes\n    }), content);\n  }\n\n  var itemsJSX = _lodash2.default.map(items, function (item) {\n    var key = item.key || [item.header, item.description].join('-');\n    return _react2.default.createElement(_Card2.default, Object.assign({\n      key: key\n    }, item));\n  });\n\n  return _react2.default.createElement(ElementType, Object.assign({}, rest, {\n    className: classes\n  }), itemsJSX);\n}\n\nCardGroup.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** A group of cards can center itself inside its container. */\n  centered: _propTypes2.default.bool,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Shorthand for primary content. */\n  content: _lib.customPropTypes.contentShorthand,\n\n  /** A group of cards can double its column width for mobile. */\n  doubling: _propTypes2.default.bool,\n\n  /** Shorthand array of props for Card. */\n  items: _lib.customPropTypes.collectionShorthand,\n\n  /** A group of cards can set how many cards should exist in a row. */\n  itemsPerRow: _propTypes2.default.oneOf(_lib.SUI.WIDTHS),\n\n  /** A group of cards can automatically stack rows to a single columns on mobile devices. */\n  stackable: _propTypes2.default.bool,\n\n  /** A card group can adjust its text alignment. */\n  textAlign: _propTypes2.default.oneOf(_lodash2.default.without(_lib.SUI.TEXT_ALIGNMENTS, 'justified'))\n};\nexports.default = CardGroup;","map":null,"metadata":{},"sourceType":"script"}