{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _class, _temp2;\n\nvar _keyboardKey = require('keyboard-key');\n\nvar _keyboardKey2 = _interopRequireDefault(_keyboardKey);\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _Ref = require('../Ref');\n\nvar _Ref2 = _interopRequireDefault(_Ref);\n\nvar _PortalInner = require('./PortalInner');\n\nvar _PortalInner2 = _interopRequireDefault(_PortalInner);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar debug = (0, _lib.makeDebugger)('portal');\n/**\n * A component that allows you to render children outside their parent.\n * @see Modal\n * @see Popup\n * @see Dimmer\n * @see Confirm\n */\n\nvar Portal = (_temp2 = _class = function (_Component) {\n  _inherits(Portal, _Component);\n\n  function Portal() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Portal);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Portal.__proto__ || Object.getPrototypeOf(Portal)).call.apply(_ref, [this].concat(args))), _this), _this.handleDocumentClick = function (e) {\n      var closeOnDocumentClick = _this.props.closeOnDocumentClick;\n\n      if (!_this.portalNode || // no portal\n      (0, _lib.doesNodeContainClick)(_this.triggerNode, e) || // event happened in trigger (delegate to trigger handlers)\n      (0, _lib.doesNodeContainClick)(_this.portalNode, e) // event happened in the portal\n      ) {\n          return;\n        } // ignore the click\n\n\n      if (closeOnDocumentClick) {\n        debug('handleDocumentClick()');\n\n        _this.close(e);\n      }\n    }, _this.handleEscape = function (e) {\n      if (!_this.props.closeOnEscape) return;\n      if (_keyboardKey2.default.getCode(e) !== _keyboardKey2.default.Escape) return;\n      debug('handleEscape()');\n\n      _this.close(e);\n    }, _this.handlePortalMouseLeave = function (e) {\n      var _this$props = _this.props,\n          closeOnPortalMouseLeave = _this$props.closeOnPortalMouseLeave,\n          mouseLeaveDelay = _this$props.mouseLeaveDelay;\n      if (!closeOnPortalMouseLeave) return; // Do not close the portal when 'mouseleave' is triggered by children\n\n      if (e.target !== _this.portalNode) return;\n      debug('handlePortalMouseLeave()');\n      _this.mouseLeaveTimer = _this.closeWithTimeout(e, mouseLeaveDelay);\n    }, _this.handlePortalMouseEnter = function () {\n      // In order to enable mousing from the trigger to the portal, we need to\n      // clear the mouseleave timer that was set when leaving the trigger.\n      var closeOnPortalMouseLeave = _this.props.closeOnPortalMouseLeave;\n      if (!closeOnPortalMouseLeave) return;\n      debug('handlePortalMouseEnter()');\n      clearTimeout(_this.mouseLeaveTimer);\n    }, _this.handleTriggerBlur = function (e) {\n      for (var _len2 = arguments.length, rest = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        rest[_key2 - 1] = arguments[_key2];\n      }\n\n      var _this$props2 = _this.props,\n          trigger = _this$props2.trigger,\n          closeOnTriggerBlur = _this$props2.closeOnTriggerBlur; // Call original event handler\n\n      _lodash2.default.invoke.apply(_lodash2.default, [trigger, 'props.onBlur', e].concat(rest)); // IE 11 doesn't work with relatedTarget in blur events\n\n\n      var target = e.relatedTarget || document.activeElement; // do not close if focus is given to the portal\n\n      var didFocusPortal = _lodash2.default.invoke(_this, 'portalNode.contains', target);\n\n      if (!closeOnTriggerBlur || didFocusPortal) return;\n      debug('handleTriggerBlur()');\n\n      _this.close(e);\n    }, _this.handleTriggerClick = function (e) {\n      for (var _len3 = arguments.length, rest = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n        rest[_key3 - 1] = arguments[_key3];\n      }\n\n      var _this$props3 = _this.props,\n          trigger = _this$props3.trigger,\n          closeOnTriggerClick = _this$props3.closeOnTriggerClick,\n          openOnTriggerClick = _this$props3.openOnTriggerClick;\n      var open = _this.state.open; // Call original event handler\n\n      _lodash2.default.invoke.apply(_lodash2.default, [trigger, 'props.onClick', e].concat(rest));\n\n      if (open && closeOnTriggerClick) {\n        debug('handleTriggerClick() - close');\n\n        _this.close(e);\n      } else if (!open && openOnTriggerClick) {\n        debug('handleTriggerClick() - open');\n\n        _this.open(e);\n      }\n    }, _this.handleTriggerFocus = function (e) {\n      for (var _len4 = arguments.length, rest = Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n        rest[_key4 - 1] = arguments[_key4];\n      }\n\n      var _this$props4 = _this.props,\n          trigger = _this$props4.trigger,\n          openOnTriggerFocus = _this$props4.openOnTriggerFocus; // Call original event handler\n\n      _lodash2.default.invoke.apply(_lodash2.default, [trigger, 'props.onFocus', e].concat(rest));\n\n      if (!openOnTriggerFocus) return;\n      debug('handleTriggerFocus()');\n\n      _this.open(e);\n    }, _this.handleTriggerMouseLeave = function (e) {\n      for (var _len5 = arguments.length, rest = Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {\n        rest[_key5 - 1] = arguments[_key5];\n      }\n\n      clearTimeout(_this.mouseEnterTimer);\n      var _this$props5 = _this.props,\n          trigger = _this$props5.trigger,\n          closeOnTriggerMouseLeave = _this$props5.closeOnTriggerMouseLeave,\n          mouseLeaveDelay = _this$props5.mouseLeaveDelay; // Call original event handler\n\n      _lodash2.default.invoke.apply(_lodash2.default, [trigger, 'props.onMouseLeave', e].concat(rest));\n\n      if (!closeOnTriggerMouseLeave) return;\n      debug('handleTriggerMouseLeave()');\n      _this.mouseLeaveTimer = _this.closeWithTimeout(e, mouseLeaveDelay);\n    }, _this.handleTriggerMouseEnter = function (e) {\n      for (var _len6 = arguments.length, rest = Array(_len6 > 1 ? _len6 - 1 : 0), _key6 = 1; _key6 < _len6; _key6++) {\n        rest[_key6 - 1] = arguments[_key6];\n      }\n\n      clearTimeout(_this.mouseLeaveTimer);\n      var _this$props6 = _this.props,\n          trigger = _this$props6.trigger,\n          mouseEnterDelay = _this$props6.mouseEnterDelay,\n          openOnTriggerMouseEnter = _this$props6.openOnTriggerMouseEnter; // Call original event handler\n\n      _lodash2.default.invoke.apply(_lodash2.default, [trigger, 'props.onMouseEnter', e].concat(rest));\n\n      if (!openOnTriggerMouseEnter) return;\n      debug('handleTriggerMouseEnter()');\n      _this.mouseEnterTimer = _this.openWithTimeout(e, mouseEnterDelay);\n    }, _this.open = function (e) {\n      debug('open()');\n      var onOpen = _this.props.onOpen;\n      if (onOpen) onOpen(e, _this.props);\n\n      _this.trySetState({\n        open: true\n      });\n    }, _this.openWithTimeout = function (e, delay) {\n      debug('openWithTimeout()', delay); // React wipes the entire event object and suggests using e.persist() if\n      // you need the event for async access. However, even with e.persist\n      // certain required props (e.g. currentTarget) are null so we're forced to clone.\n\n      var eventClone = Object.assign({}, e);\n      return setTimeout(function () {\n        return _this.open(eventClone);\n      }, delay || 0);\n    }, _this.close = function (e) {\n      debug('close()');\n      var onClose = _this.props.onClose;\n      if (onClose) onClose(e, _this.props);\n\n      _this.trySetState({\n        open: false\n      });\n    }, _this.closeWithTimeout = function (e, delay) {\n      debug('closeWithTimeout()', delay); // React wipes the entire event object and suggests using e.persist() if\n      // you need the event for async access. However, even with e.persist\n      // certain required props (e.g. currentTarget) are null so we're forced to clone.\n\n      var eventClone = Object.assign({}, e);\n      return setTimeout(function () {\n        return _this.close(eventClone);\n      }, delay || 0);\n    }, _this.handleMount = function (e, _ref2) {\n      var target = _ref2.node;\n      debug('handleMount()');\n      var eventPool = _this.props.eventPool;\n      _this.portalNode = target;\n\n      _lib.eventStack.sub('mouseleave', _this.handlePortalMouseLeave, {\n        pool: eventPool,\n        target: target\n      });\n\n      _lib.eventStack.sub('mouseenter', _this.handlePortalMouseEnter, {\n        pool: eventPool,\n        target: target\n      });\n\n      _lib.eventStack.sub('click', _this.handleDocumentClick, {\n        pool: eventPool\n      });\n\n      _lib.eventStack.sub('keydown', _this.handleEscape, {\n        pool: eventPool\n      });\n\n      _lodash2.default.invoke(_this.props, 'onMount', null, _this.props);\n    }, _this.handleUnmount = function (e, _ref3) {\n      var target = _ref3.node;\n      debug('handleUnmount()');\n      var eventPool = _this.props.eventPool;\n      _this.portalNode = null;\n\n      _lib.eventStack.unsub('mouseleave', _this.handlePortalMouseLeave, {\n        pool: eventPool,\n        target: target\n      });\n\n      _lib.eventStack.unsub('mouseenter', _this.handlePortalMouseEnter, {\n        pool: eventPool,\n        target: target\n      });\n\n      _lib.eventStack.unsub('click', _this.handleDocumentClick, {\n        pool: eventPool\n      });\n\n      _lib.eventStack.unsub('keydown', _this.handleEscape, {\n        pool: eventPool\n      });\n\n      _lodash2.default.invoke(_this.props, 'onUnmount', null, _this.props);\n    }, _this.handleTriggerRef = function (c) {\n      debug('handleTriggerRef()');\n      _this.triggerNode = c;\n      (0, _lib.handleRef)(_this.props.triggerRef, c);\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(Portal, [{\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      // Clean up timers\n      clearTimeout(this.mouseEnterTimer);\n      clearTimeout(this.mouseLeaveTimer);\n    } // ----------------------------------------\n    // Document Event Handlers\n    // ----------------------------------------\n    // ----------------------------------------\n    // Component Event Handlers\n    // ----------------------------------------\n    // ----------------------------------------\n    // Behavior\n    // ----------------------------------------\n\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          children = _props.children,\n          mountNode = _props.mountNode,\n          trigger = _props.trigger;\n      var open = this.state.open;\n      return _react2.default.createElement(_react.Fragment, null, open && _react2.default.createElement(_PortalInner2.default, {\n        mountNode: mountNode,\n        onMount: this.handleMount,\n        onUnmount: this.handleUnmount\n      }, children), trigger && _react2.default.createElement(_Ref2.default, {\n        innerRef: this.handleTriggerRef\n      }, (0, _react.cloneElement)(trigger, {\n        onBlur: this.handleTriggerBlur,\n        onClick: this.handleTriggerClick,\n        onFocus: this.handleTriggerFocus,\n        onMouseLeave: this.handleTriggerMouseLeave,\n        onMouseEnter: this.handleTriggerMouseEnter\n      })));\n    }\n  }]);\n\n  return Portal;\n}(_lib.AutoControlledComponent), _class.propTypes = {\n  /** Primary content. */\n  children: _propTypes2.default.node.isRequired,\n\n  /** Controls whether or not the portal should close when the document is clicked. */\n  closeOnDocumentClick: _propTypes2.default.bool,\n\n  /** Controls whether or not the portal should close when escape is pressed is displayed. */\n  closeOnEscape: _propTypes2.default.bool,\n\n  /**\n   * Controls whether or not the portal should close when mousing out of the portal.\n   * NOTE: This will prevent `closeOnTriggerMouseLeave` when mousing over the\n   * gap from the trigger to the portal.\n   */\n  closeOnPortalMouseLeave: _propTypes2.default.bool,\n\n  /** Controls whether or not the portal should close on blur of the trigger. */\n  closeOnTriggerBlur: _propTypes2.default.bool,\n\n  /** Controls whether or not the portal should close on click of the trigger. */\n  closeOnTriggerClick: _propTypes2.default.bool,\n\n  /** Controls whether or not the portal should close when mousing out of the trigger. */\n  closeOnTriggerMouseLeave: _propTypes2.default.bool,\n\n  /** Initial value of open. */\n  defaultOpen: _propTypes2.default.bool,\n\n  /** Event pool namespace that is used to handle component events */\n  eventPool: _propTypes2.default.string,\n\n  /** The node where the portal should mount. */\n  mountNode: _propTypes2.default.any,\n\n  /** Milliseconds to wait before opening on mouse over */\n  mouseEnterDelay: _propTypes2.default.number,\n\n  /** Milliseconds to wait before closing on mouse leave */\n  mouseLeaveDelay: _propTypes2.default.number,\n\n  /**\n   * Called when a close event happens\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onClose: _propTypes2.default.func,\n\n  /**\n   * Called when the portal is mounted on the DOM.\n   *\n   * @param {null}\n   * @param {object} data - All props.\n   */\n  onMount: _propTypes2.default.func,\n\n  /**\n   * Called when an open event happens\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onOpen: _propTypes2.default.func,\n\n  /**\n   * Called when the portal is unmounted from the DOM.\n   *\n   * @param {null}\n   * @param {object} data - All props.\n   */\n  onUnmount: _propTypes2.default.func,\n\n  /** Controls whether or not the portal is displayed. */\n  open: _propTypes2.default.bool,\n\n  /** Controls whether or not the portal should open when the trigger is clicked. */\n  openOnTriggerClick: _propTypes2.default.bool,\n\n  /** Controls whether or not the portal should open on focus of the trigger. */\n  openOnTriggerFocus: _propTypes2.default.bool,\n\n  /** Controls whether or not the portal should open when mousing over the trigger. */\n  openOnTriggerMouseEnter: _propTypes2.default.bool,\n\n  /** Element to be rendered in-place where the portal is defined. */\n  trigger: _propTypes2.default.node,\n\n  /**\n   * Called with a ref to the trigger node.\n   *\n   * @param {HTMLElement} node - Referred node.\n   */\n  triggerRef: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.object])\n}, _class.defaultProps = {\n  closeOnDocumentClick: true,\n  closeOnEscape: true,\n  eventPool: 'default',\n  openOnTriggerClick: true\n}, _class.autoControlledProps = ['open'], _class.Inner = _PortalInner2.default, _temp2);\nexports.default = Portal;","map":null,"metadata":{},"sourceType":"script"}