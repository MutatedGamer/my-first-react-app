{"ast":null,"code":"import _defineProperty from \"/home/lukebord/react/react-firebase-authentication/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/home/lukebord/react/react-firebase-authentication/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/lukebord/react/react-firebase-authentication/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/lukebord/react/react-firebase-authentication/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/lukebord/react/react-firebase-authentication/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/lukebord/react/react-firebase-authentication/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/lukebord/react/react-firebase-authentication/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/lukebord/react/react-firebase-authentication/src/components/AddPlay/Steps/PlayActor.js\";\nimport React, { Component } from 'react';\nimport { Button, Col, Row, Container, Form } from 'react-bootstrap';\nimport { Header, Input, TextArea, List } from 'semantic-ui-react';\n\nvar PlayActor =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PlayActor, _Component);\n\n  function PlayActor() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PlayActor);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PlayActor)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      actors: [{\n        name: \"\",\n        characters: [\"\"]\n      }]\n    };\n\n    _this.addActor = function (e) {\n      _this.setState(function (prevState) {\n        return {\n          actors: [].concat(_toConsumableArray(prevState.actors), [{\n            name: \"\",\n            characters: [\"\"]\n          }])\n        };\n      });\n    };\n\n    _this.addCharacter = function (i, e) {\n      var actors = _toConsumableArray(_this.state.actors);\n\n      console.log(actors[i]);\n      actors[i][\"characters\"] = [].concat(_toConsumableArray(_this.state.actors[i][\"characters\"]), [\"\"]);\n      console.log(actors[i]);\n\n      _this.setState(function (prevState) {\n        return {\n          actors: actors\n        };\n      });\n    };\n\n    _this.handleChange = function (e) {\n      console.log(_this.state.actors);\n      console.log(e.target.classList);\n\n      if ([\"name\"].some(function (r) {\n        return e.target.className.includes(r);\n      })) {\n        console.log('here');\n\n        var actors = _toConsumableArray(_this.state.actors);\n\n        actors[e.target.dataset.id][e.target.className] = e.target.value;\n\n        _this.setState({\n          actors: actors\n        }, function () {\n          return console.log(_this.state.actors);\n        });\n      } else {\n        console.log('else');\n\n        _this.setState(_defineProperty({}, e.target.name, e.target.value));\n      }\n    };\n\n    _this.saveAndContinue = function (e) {\n      e.preventDefault();\n\n      _this.props.nextStep();\n    };\n\n    _this.back = function (e) {\n      e.preventDefault();\n\n      _this.props.prevStep();\n    };\n\n    return _this;\n  }\n\n  _createClass(PlayActor, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var values = this.props.values;\n      var isInvalid = values.name === '';\n      var actors = this.state.actors;\n      return React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Actor\"), actors.map(function (val, indx) {\n        return React.createElement(Container, {\n          key: indx,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, React.createElement(Col, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, React.createElement(Form.Group, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, React.createElement(Form.Label, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, \"Name\"), React.createElement(Form.Control, {\n          type: \"text\",\n          className: \"name\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        })))), React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, React.createElement(Col, {\n          xs: {\n            span: 11,\n            offset: 1\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, React.createElement(Form.Group, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, React.createElement(Form.Label, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, \"Characters\"), actors[indx][\"characters\"].map(function (val, charIndx) {\n          return React.createElement(Form.Control, {\n            key: charIndx,\n            type: \"text\",\n            \"data-id\": indx,\n            id: charIndx,\n            value: actors[indx][\"characters\"][charIndx],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79\n            },\n            __self: this\n          });\n        })), React.createElement(Button, {\n          variant: \"primary\",\n          onClick: _this2.addCharacter.bind(_this2, indx),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, \"Add Character\"))), React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, React.createElement(Col, {\n          xs: {\n            span: 11,\n            offset: 1\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, React.createElement(Form.Group, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, React.createElement(Form.Label, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, \"Unavailibility\"), React.createElement(Input, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        })))), React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, React.createElement(Col, {\n          xs: {\n            span: 11,\n            offset: 1\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, React.createElement(Form.Group, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, React.createElement(Form.Label, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, \"Notes\"), React.createElement(Form.Control, {\n          as: \"textarea\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        })))), React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }));\n      }), React.createElement(Form.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"text\",\n        onClick: this.addActor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Add New Actor\")), React.createElement(Button, {\n        onClick: this.back,\n        disabled: isInvalid,\n        variant: \"light\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Back\"), React.createElement(Button, {\n        onClick: this.saveAndContinue,\n        disabled: isInvalid,\n        variant: \"light\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Next\"))));\n    }\n  }]);\n\n  return PlayActor;\n}(Component);\n\nexport default PlayActor;","map":{"version":3,"sources":["/home/lukebord/react/react-firebase-authentication/src/components/AddPlay/Steps/PlayActor.js"],"names":["React","Component","Button","Col","Row","Container","Form","Header","Input","TextArea","List","PlayActor","state","actors","name","characters","addActor","e","setState","prevState","addCharacter","i","console","log","handleChange","target","classList","some","r","className","includes","dataset","id","value","saveAndContinue","preventDefault","props","nextStep","back","prevStep","values","isInvalid","map","val","indx","span","offset","charIndx","bind"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,GAAjB,EAAsBC,GAAtB,EAA2BC,SAA3B,EAAsCC,IAAtC,QAAkD,iBAAlD;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,QAAxB,EAAkCC,IAAlC,QAA8C,mBAA9C;;IAGMC,S;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,MAAM,EAAE,CAAC;AAACC,QAAAA,IAAI,EAAC,EAAN;AAAUC,QAAAA,UAAU,EAAC,CAAC,EAAD;AAArB,OAAD;AADF,K;;UAIRC,Q,GAAW,UAACC,CAAD,EAAO;AAChB,YAAKC,QAAL,CAAc,UAACC,SAAD;AAAA,eAAgB;AAC5BN,UAAAA,MAAM,+BAAMM,SAAS,CAACN,MAAhB,IAAwB;AAACC,YAAAA,IAAI,EAAC,EAAN;AAAUC,YAAAA,UAAU,EAAC,CAAC,EAAD;AAArB,WAAxB;AADsB,SAAhB;AAAA,OAAd;AAGD,K;;UAEDK,Y,GAAe,UAACC,CAAD,EAAIJ,CAAJ,EAAU;AACvB,UAAIJ,MAAM,sBAAO,MAAKD,KAAL,CAAWC,MAAlB,CAAV;;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAYV,MAAM,CAACQ,CAAD,CAAlB;AACAR,MAAAA,MAAM,CAACQ,CAAD,CAAN,CAAU,YAAV,iCAA8B,MAAKT,KAAL,CAAWC,MAAX,CAAkBQ,CAAlB,EAAqB,YAArB,CAA9B,IAAkE,EAAlE;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYV,MAAM,CAACQ,CAAD,CAAlB;;AACA,YAAKH,QAAL,CAAc,UAACC,SAAD;AAAA,eAAgB;AAC5BN,UAAAA,MAAM,EAANA;AAD4B,SAAhB;AAAA,OAAd;AAGD,K;;UAEDW,Y,GAAe,UAACP,CAAD,EAAO;AACpBK,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKX,KAAL,CAAWC,MAAvB;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAYN,CAAC,CAACQ,MAAF,CAASC,SAArB;;AACA,UAAI,CAAC,MAAD,EAAUC,IAAV,CAAe,UAAAC,CAAC;AAAA,eAAIX,CAAC,CAACQ,MAAF,CAASI,SAAT,CAAmBC,QAAnB,CAA4BF,CAA5B,CAAJ;AAAA,OAAhB,CAAJ,EAA0D;AACxDN,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;;AACA,YAAIV,MAAM,sBAAO,MAAKD,KAAL,CAAWC,MAAlB,CAAV;;AACAA,QAAAA,MAAM,CAACI,CAAC,CAACQ,MAAF,CAASM,OAAT,CAAiBC,EAAlB,CAAN,CAA4Bf,CAAC,CAACQ,MAAF,CAASI,SAArC,IAAkDZ,CAAC,CAACQ,MAAF,CAASQ,KAA3D;;AACA,cAAKf,QAAL,CAAc;AAAEL,UAAAA,MAAM,EAANA;AAAF,SAAd,EAA0B;AAAA,iBAAMS,OAAO,CAACC,GAAR,CAAY,MAAKX,KAAL,CAAWC,MAAvB,CAAN;AAAA,SAA1B;AACD,OALD,MAKO;AACLS,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;;AACA,cAAKL,QAAL,qBAAiBD,CAAC,CAACQ,MAAF,CAASX,IAA1B,EAAiCG,CAAC,CAACQ,MAAF,CAASQ,KAA1C;AACD;AACF,K;;UAEDC,e,GAAkB,UAACjB,CAAD,EAAO;AACvBA,MAAAA,CAAC,CAACkB,cAAF;;AACA,YAAKC,KAAL,CAAWC,QAAX;AACD,K;;UAEDC,I,GAAO,UAACrB,CAAD,EAAO;AACZA,MAAAA,CAAC,CAACkB,cAAF;;AACA,YAAKC,KAAL,CAAWG,QAAX;AACD,K;;;;;;;6BAEQ;AAAA;;AAAA,UACCC,MADD,GACY,KAAKJ,KADjB,CACCI,MADD;AAEP,UAAMC,SAAS,GACXD,MAAM,CAAC1B,IAAP,KAAgB,EADpB;AAFO,UAIFD,MAJE,GAIQ,KAAKD,KAJb,CAIFC,MAJE;AAKP,aACA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,QAAQ,EAAE,KAAKW,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAGMX,MAAM,CAAC6B,GAAP,CAAW,UAACC,GAAD,EAAMC,IAAN,EAAe;AAC1B,eACE,oBAAC,SAAD;AAAW,UAAA,GAAG,EAAEA,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,UAAA,IAAI,EAAC,MAAnB;AAA0B,UAAA,SAAS,EAAC,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,CADJ,CADF,CADF,EASI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA,oBAAC,GAAD;AAAK,UAAA,EAAE,EAAE;AAAEC,YAAAA,IAAI,EAAE,EAAR;AAAYC,YAAAA,MAAM,EAAE;AAApB,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEMjC,MAAM,CAAC+B,IAAD,CAAN,CAAa,YAAb,EAA2BF,GAA3B,CAA+B,UAACC,GAAD,EAAMI,QAAN,EAAmB;AAChD,iBACE,oBAAC,IAAD,CAAM,OAAN;AAAc,YAAA,GAAG,EAAEA,QAAnB;AAA6B,YAAA,IAAI,EAAC,MAAlC;AAAyC,uBAASH,IAAlD;AAAwD,YAAA,EAAE,EAAEG,QAA5D;AAAsE,YAAA,KAAK,EAAElC,MAAM,CAAC+B,IAAD,CAAN,CAAa,YAAb,EAA2BG,QAA3B,CAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAGD,SAJD,CAFN,CADJ,EAUI,oBAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,SAAhB;AAA0B,UAAA,OAAO,EAAE,MAAI,CAAC3B,YAAL,CAAkB4B,IAAlB,CAAuB,MAAvB,EAA6BJ,IAA7B,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAVJ,CADA,CATJ,EAuBE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,GAAD;AAAK,UAAA,EAAE,EAAE;AAAEC,YAAAA,IAAI,EAAE,EAAR;AAAYC,YAAAA,MAAM,EAAE;AAApB,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,CADJ,CADF,CAvBF,EA+BE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,GAAD;AAAK,UAAA,EAAE,EAAE;AAAED,YAAAA,IAAI,EAAE,EAAR;AAAYC,YAAAA,MAAM,EAAE;AAApB,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,UAAA,EAAE,EAAC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,CADJ,CADF,CA/BF,EAuCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAvCF,CADF;AA2CC,OA5CD,CAHN,EAoDI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,MAAb;AAAoB,QAAA,OAAO,EAAE,KAAK9B,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CApDJ,EAuDI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKsB,IAAtB;AAA4B,QAAA,QAAQ,EAAEG,SAAtC;AAAiD,QAAA,OAAO,EAAC,OAAzD;AAAiE,QAAA,IAAI,EAAC,QAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAvDJ,EA0DI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKP,eAAtB;AAAuC,QAAA,QAAQ,EAAEO,SAAjD;AAA4D,QAAA,OAAO,EAAC,OAApE;AAA4E,QAAA,IAAI,EAAC,QAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA1DJ,CADF,CADF,CADA;AAoED;;;;EAtHqBxC,S;;AAyHxB,eAAeU,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Button, Col, Row, Container, Form } from 'react-bootstrap';\nimport { Header, Input, TextArea, List } from 'semantic-ui-react';\n\n\nclass PlayActor extends Component {\n  state = {\n    actors: [{name:\"\", characters:[\"\"],},],\n  }\n\n  addActor = (e) => {\n    this.setState((prevState) => ({\n      actors: [...prevState.actors, {name:\"\", characters:[\"\"],}],\n    }));\n  }\n\n  addCharacter = (i, e) => {\n    let actors = [...this.state.actors];\n    console.log(actors[i]);\n    actors[i][\"characters\"] = [...this.state.actors[i][\"characters\"], \"\"];\n    console.log(actors[i]);\n    this.setState((prevState) => ({\n      actors\n    }));\n  }\n\n  handleChange = (e) => {\n    console.log(this.state.actors);\n    console.log(e.target.classList);\n    if ([\"name\",].some(r => e.target.className.includes(r)) ) {\n      console.log('here');\n      let actors = [...this.state.actors];\n      actors[e.target.dataset.id][e.target.className] = e.target.value;\n      this.setState({ actors }, () => console.log(this.state.actors))\n    } else {\n      console.log('else');\n      this.setState({ [e.target.name]: e.target.value })\n    }\n  }\n\n  saveAndContinue = (e) => {\n    e.preventDefault();\n    this.props.nextStep();\n  }\n\n  back = (e) => {\n    e.preventDefault();\n    this.props.prevStep();\n  }\n\n  render() {\n    const { values } = this.props;\n    const isInvalid =\n        values.name === '';\n    let {actors} = this.state;\n    return (\n    <Row>\n      <Col>\n        <Form onChange={this.handleChange}>\n          <Header as=\"h1\">Actor</Header>\n\n            { actors.map((val, indx) => {\n              return (\n                <Container key={indx}>\n                  <Row>\n                    <Col>\n                        <Form.Group>\n                          <Form.Label>Name</Form.Label>\n                          <Form.Control type=\"text\" className=\"name\" />\n                        </Form.Group>\n                    </Col>\n                  </Row>\n                    <Row>\n                    <Col xs={{ span: 11, offset: 1}}>\n                        <Form.Group>\n                          <Form.Label>Characters</Form.Label>\n                            { actors[indx][\"characters\"].map((val, charIndx) => {\n                                return (\n                                  <Form.Control key={charIndx} type=\"text\" data-id={indx} id={charIndx} value={actors[indx][\"characters\"][charIndx]}/>\n                                )\n                              })\n                            }\n                        </Form.Group>\n                        <Button variant=\"primary\" onClick={this.addCharacter.bind(this, indx)}>Add Character</Button>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col xs={{ span: 11, offset: 1}}>\n                        <Form.Group>\n                          <Form.Label>Unavailibility</Form.Label>\n                          <Input />\n                        </Form.Group>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col xs={{ span: 11, offset: 1}}>\n                        <Form.Group>\n                          <Form.Label>Notes</Form.Label>\n                          <Form.Control as=\"textarea\" />\n                        </Form.Group>\n                    </Col>\n                  </Row>\n                  <hr />\n                </Container>\n              )\n              })\n            }\n\n\n\n            <Form.Group>\n              <Button type=\"text\" onClick={this.addActor}>Add New Actor</Button>\n            </Form.Group>\n            <Button onClick={this.back} disabled={isInvalid} variant=\"light\" type=\"submit\">\n                Back\n            </Button>\n            <Button onClick={this.saveAndContinue} disabled={isInvalid} variant=\"light\" type=\"submit\">\n                Next\n            </Button>\n        </Form>\n      </Col>\n    </Row>\n    );\n  }\n}\n\nexport default PlayActor;\n"]},"metadata":{},"sourceType":"module"}