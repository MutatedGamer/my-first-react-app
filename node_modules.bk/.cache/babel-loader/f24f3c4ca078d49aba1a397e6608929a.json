{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createComplexRange = exports.createSimpleRange = undefined;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _suffixFactories = require('./suffixFactories');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nvar createSimpleRange = exports.createSimpleRange = function createSimpleRange(start, end, pageFactory) {\n  return _lodash2.default.map(_lodash2.default.range(start, end + 1), pageFactory);\n};\n\nvar createComplexRange = exports.createComplexRange = function createComplexRange(options, pageFactory) {\n  var activePage = options.activePage,\n      boundaryRange = options.boundaryRange,\n      hideEllipsis = options.hideEllipsis,\n      siblingRange = options.siblingRange,\n      totalPages = options.totalPages;\n  var ellipsisSize = hideEllipsis ? 0 : 1;\n  var firstGroupEnd = boundaryRange;\n  var firstGroup = createSimpleRange(1, firstGroupEnd, pageFactory);\n  var lastGroupStart = totalPages + 1 - boundaryRange;\n  var lastGroup = createSimpleRange(lastGroupStart, totalPages, pageFactory);\n  var innerGroupStart = Math.min(Math.max(activePage - siblingRange, firstGroupEnd + ellipsisSize + 1), lastGroupStart - ellipsisSize - 2 * siblingRange - 1);\n  var innerGroupEnd = innerGroupStart + 2 * siblingRange;\n  var innerGroup = createSimpleRange(innerGroupStart, innerGroupEnd, pageFactory);\n  return [].concat(_toConsumableArray(firstGroup), [!hideEllipsis && (0, _suffixFactories.createInnerPrefix)(firstGroupEnd, innerGroupStart, pageFactory)], _toConsumableArray(innerGroup), [!hideEllipsis && (0, _suffixFactories.createInnerSuffix)(innerGroupEnd, lastGroupStart, pageFactory)], _toConsumableArray(lastGroup)).filter(Boolean);\n};","map":null,"metadata":{},"sourceType":"script"}