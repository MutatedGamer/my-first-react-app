{"ast":null,"code":"import _classCallCheck from \"/home/lukebord/react/sm-buddy/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/lukebord/react/sm-buddy/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/lukebord/react/sm-buddy/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/lukebord/react/sm-buddy/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/lukebord/react/sm-buddy/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/lukebord/react/sm-buddy/src/components/AddConflict/index.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { withAuthUser, withAuthorization, withAuthentication } from '../Session';\nimport { withFirebase } from '../Firebase';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { Card } from 'semantic-ui-react';\n\nvar PlaysPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PlaysPage, _Component);\n\n  function PlaysPage(props) {\n    var _this;\n\n    _classCallCheck(this, PlaysPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PlaysPage).call(this, props));\n    _this.state = {\n      loading: false,\n      play: {}\n    };\n    return _this;\n  }\n\n  _createClass(PlaysPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.setState({\n        loading: true\n      });\n      var playId = this.props.match.params.playId;\n      console.log(playId);\n      var show = this.props.firebase.db.collection(\"shows\").doc(playId);\n      this.unsubscribe = show.get().then(function (snapshot) {\n        var plays = [];\n\n        var _snapshot$data = snapshot.data(),\n            name = _snapshot$data.name,\n            description = _snapshot$data.description,\n            created = _snapshot$data.created;\n\n        var play = {\n          name: name,\n          description: description,\n          created: created,\n          actors: []\n        };\n        show.collection(\"actors\").get().then(function (snapshot) {\n          snapshot.forEach(function (doc) {\n            play.actors.append(doc.name);\n          });\n        });\n        console.log(play);\n\n        _this2.setState({\n          play: play,\n          loading: false\n        });\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.unsubscribe && this.unsubscribe();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          plays = _this$state.plays,\n          loading = _this$state.loading;\n      return React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Add Conflict\"), loading && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Loading ...\")));\n    }\n  }]);\n\n  return PlaysPage;\n}(Component);\n\nvar condition = function condition(authUser) {\n  return !!authUser;\n};\n\nexport default withAuthUser(withAuthorization(condition)(PlaysPage));","map":{"version":3,"sources":["/home/lukebord/react/sm-buddy/src/components/AddConflict/index.js"],"names":["React","Component","Link","withAuthUser","withAuthorization","withAuthentication","withFirebase","Container","Row","Col","Card","PlaysPage","props","state","loading","play","setState","playId","match","params","console","log","show","firebase","db","collection","doc","unsubscribe","get","then","snapshot","plays","data","name","description","created","actors","forEach","append","condition","authUser"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,YAAT,EAAuBC,iBAAvB,EAA0CC,kBAA1C,QAAoE,YAApE;AACA,SAASC,YAAT,QAA6B,aAA7B;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,iBAApC;AACA,SAASC,IAAT,QAAqB,mBAArB;;IAEMC,S;;;;;AACJ,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,mFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,KADA;AAETC,MAAAA,IAAI,EAAE;AAFG,KAAb;AAHiB;AAOlB;;;;wCAEmB;AAAA;;AAClB,WAAKC,QAAL,CAAc;AAAEF,QAAAA,OAAO,EAAE;AAAX,OAAd;AACA,UAAIG,MAAM,GAAG,KAAKL,KAAL,CAAWM,KAAX,CAAiBC,MAAjB,CAAwBF,MAArC;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AACA,UAAIK,IAAI,GAAG,KAAKV,KAAL,CAAWW,QAAX,CAAoBC,EAApB,CAAuBC,UAAvB,CAAkC,OAAlC,EAA2CC,GAA3C,CAA+CT,MAA/C,CAAX;AACA,WAAKU,WAAL,GAAmBL,IAAI,CAACM,GAAL,GAAWC,IAAX,CAAgB,UAAAC,QAAQ,EAAI;AAC3C,YAAMC,KAAK,GAAG,EAAd;;AAD2C,6BAEJD,QAAQ,CAACE,IAAT,EAFI;AAAA,YAEnCC,IAFmC,kBAEnCA,IAFmC;AAAA,YAE7BC,WAF6B,kBAE7BA,WAF6B;AAAA,YAEhBC,OAFgB,kBAEhBA,OAFgB;;AAG3C,YAAIpB,IAAI,GAAG;AACPkB,UAAAA,IAAI,EAAJA,IADO;AAEPC,UAAAA,WAAW,EAAXA,WAFO;AAGPC,UAAAA,OAAO,EAAPA,OAHO;AAIPC,UAAAA,MAAM,EAAE;AAJD,SAAX;AAMAd,QAAAA,IAAI,CAACG,UAAL,CAAgB,QAAhB,EAA0BG,GAA1B,GAAgCC,IAAhC,CAAqC,UAAAC,QAAQ,EAAI;AAC/CA,UAAAA,QAAQ,CAACO,OAAT,CAAiB,UAAAX,GAAG,EAAI;AACtBX,YAAAA,IAAI,CAACqB,MAAL,CAAYE,MAAZ,CAAmBZ,GAAG,CAACO,IAAvB;AACD,WAFD;AAGD,SAJD;AAKAb,QAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;;AAEA,QAAA,MAAI,CAACC,QAAL,CAAc;AACVD,UAAAA,IAAI,EAAJA,IADU;AAEVD,UAAAA,OAAO,EAAE;AAFC,SAAd;AAIH,OApBkB,CAAnB;AAqBD;;;2CAEsB;AACnB,WAAKa,WAAL,IAAoB,KAAKA,WAAL,EAApB;AACH;;;6BAGQ;AAAA,wBACoB,KAAKd,KADzB;AAAA,UACCkB,KADD,eACCA,KADD;AAAA,UACQjB,OADR,eACQA,OADR;AAGP,aACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEGA,OAAO,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFd,CADF,CADJ;AAQD;;;;EAtDqBb,S;;AA0DxB,IAAMsC,SAAS,GAAG,SAAZA,SAAY,CAAAC,QAAQ;AAAA,SAAI,CAAC,CAACA,QAAN;AAAA,CAA1B;;AAEA,eAAerC,YAAY,CAACC,iBAAiB,CAACmC,SAAD,CAAjB,CAA6B5B,SAA7B,CAAD,CAA3B","sourcesContent":["import React, { Component } from 'react';\n\nimport { Link } from 'react-router-dom';\nimport { withAuthUser, withAuthorization, withAuthentication } from '../Session';\nimport { withFirebase } from '../Firebase';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { Card } from 'semantic-ui-react';\n\nclass PlaysPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n        loading: false,\n        play: {},\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ loading: true });\n    let playId = this.props.match.params.playId;\n    console.log(playId);\n    let show = this.props.firebase.db.collection(\"shows\").doc(playId);\n    this.unsubscribe = show.get().then(snapshot => {\n        const plays = [];\n        const { name, description, created } = snapshot.data();\n        let play = {\n            name,\n            description,\n            created,\n            actors: [],\n        };\n        show.collection(\"actors\").get().then(snapshot => {\n          snapshot.forEach(doc => {\n            play.actors.append(doc.name);\n          });\n        });\n        console.log(play);\n\n        this.setState({\n            play,\n            loading: false,\n        });\n    });\n  }\n\n  componentWillUnmount() {\n      this.unsubscribe && this.unsubscribe();\n  }\n\n\n  render() {\n    const { plays, loading } = this.state;\n\n    return (\n        <Row>\n          <Col>\n            <h1>Add Conflict</h1>\n            {loading && <div>Loading ...</div>}\n        </Col>\n      </Row>\n    );\n  }\n}\n\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthUser(withAuthorization(condition)(PlaysPage));\n"]},"metadata":{},"sourceType":"module"}