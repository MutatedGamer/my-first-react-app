{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _class, _temp2;\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _Image = require('../../elements/Image');\n\nvar _Image2 = _interopRequireDefault(_Image);\n\nvar _CardContent = require('./CardContent');\n\nvar _CardContent2 = _interopRequireDefault(_CardContent);\n\nvar _CardDescription = require('./CardDescription');\n\nvar _CardDescription2 = _interopRequireDefault(_CardDescription);\n\nvar _CardGroup = require('./CardGroup');\n\nvar _CardGroup2 = _interopRequireDefault(_CardGroup);\n\nvar _CardHeader = require('./CardHeader');\n\nvar _CardHeader2 = _interopRequireDefault(_CardHeader);\n\nvar _CardMeta = require('./CardMeta');\n\nvar _CardMeta2 = _interopRequireDefault(_CardMeta);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/**\n * A card displays site content in a manner similar to a playing card.\n */\n\n\nvar Card = (_temp2 = _class = function (_Component) {\n  _inherits(Card, _Component);\n\n  function Card() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Card);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Card.__proto__ || Object.getPrototypeOf(Card)).call.apply(_ref, [this].concat(args))), _this), _this.handleClick = function (e) {\n      var onClick = _this.props.onClick;\n      if (onClick) onClick(e, _this.props);\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(Card, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          centered = _props.centered,\n          children = _props.children,\n          className = _props.className,\n          color = _props.color,\n          content = _props.content,\n          description = _props.description,\n          extra = _props.extra,\n          fluid = _props.fluid,\n          header = _props.header,\n          href = _props.href,\n          image = _props.image,\n          link = _props.link,\n          meta = _props.meta,\n          onClick = _props.onClick,\n          raised = _props.raised;\n      var classes = (0, _classnames2.default)('ui', color, (0, _lib.useKeyOnly)(centered, 'centered'), (0, _lib.useKeyOnly)(fluid, 'fluid'), (0, _lib.useKeyOnly)(link, 'link'), (0, _lib.useKeyOnly)(raised, 'raised'), 'card', className);\n      var rest = (0, _lib.getUnhandledProps)(Card, this.props);\n      var ElementType = (0, _lib.getElementType)(Card, this.props, function () {\n        if (onClick) return 'a';\n      });\n\n      if (!_lib.childrenUtils.isNil(children)) {\n        return _react2.default.createElement(ElementType, Object.assign({}, rest, {\n          className: classes,\n          href: href,\n          onClick: this.handleClick\n        }), children);\n      }\n\n      if (!_lib.childrenUtils.isNil(content)) {\n        return _react2.default.createElement(ElementType, Object.assign({}, rest, {\n          className: classes,\n          href: href,\n          onClick: this.handleClick\n        }), content);\n      }\n\n      return _react2.default.createElement(ElementType, Object.assign({}, rest, {\n        className: classes,\n        href: href,\n        onClick: this.handleClick\n      }), _Image2.default.create(image, {\n        autoGenerateKey: false\n      }), (description || header || meta) && _react2.default.createElement(_CardContent2.default, {\n        description: description,\n        header: header,\n        meta: meta\n      }), extra && _react2.default.createElement(_CardContent2.default, {\n        extra: true\n      }, extra));\n    }\n  }]);\n\n  return Card;\n}(_react.Component), _class.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** A Card can center itself inside its container. */\n  centered: _propTypes2.default.bool,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** A Card can be formatted to display different colors. */\n  color: _propTypes2.default.oneOf(_lib.SUI.COLORS),\n\n  /** Shorthand for primary content. */\n  content: _lib.customPropTypes.contentShorthand,\n\n  /** Shorthand for CardDescription. */\n  description: _lib.customPropTypes.itemShorthand,\n\n  /** Shorthand for primary content of CardContent. */\n  extra: _lib.customPropTypes.contentShorthand,\n\n  /** A Card can be formatted to take up the width of its container. */\n  fluid: _propTypes2.default.bool,\n\n  /** Shorthand for CardHeader. */\n  header: _lib.customPropTypes.itemShorthand,\n\n  /** Render as an `a` tag instead of a `div` and adds the href attribute. */\n  href: _propTypes2.default.string,\n\n  /** A card can contain an Image component. */\n  image: _lib.customPropTypes.itemShorthand,\n\n  /** A card can be formatted to link to other content. */\n  link: _propTypes2.default.bool,\n\n  /** Shorthand for CardMeta. */\n  meta: _lib.customPropTypes.itemShorthand,\n\n  /**\n   * Called on click. When passed, the component renders as an `a`\n   * tag by default instead of a `div`.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onClick: _propTypes2.default.func,\n\n  /** A Card can be formatted to raise above the page. */\n  raised: _propTypes2.default.bool\n}, _class.Content = _CardContent2.default, _class.Description = _CardDescription2.default, _class.Group = _CardGroup2.default, _class.Header = _CardHeader2.default, _class.Meta = _CardMeta2.default, _temp2);\nexports.default = Card;","map":null,"metadata":{},"sourceType":"script"}