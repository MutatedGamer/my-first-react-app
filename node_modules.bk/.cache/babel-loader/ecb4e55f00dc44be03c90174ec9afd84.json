{"ast":null,"code":"import _classCallCheck from \"/home/lukebord/react/react-firebase-authentication/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport 'firebase/firestore';\nvar config = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID\n};\n\nvar Firebase = function Firebase() {\n  var _this = this;\n\n  _classCallCheck(this, Firebase);\n\n  this.doCreateUserWithEmailAndPassword = function (email, password) {\n    return _this.auth.createUserWithEmailAndPassword(email, password);\n  };\n\n  this.doSignInWithEmailAndPassword = function (email, password) {\n    return _this.auth.signInWithEmailAndPassword(email, password);\n  };\n\n  this.doSignOut = function () {\n    return _this.auth.signOut();\n  };\n\n  this.doPasswordReset = function (email) {\n    return _this.auth.sendPasswordResetEmail(email);\n  };\n\n  this.doPasswordUpdate = function (password) {\n    return _this.auth.currentUser.updatePassword(password);\n  };\n\n  this.addUser = function (uid, username, email) {\n    return _this.db.collection(\"users\").doc(uid).set({\n      email: email,\n      username: username\n    });\n  };\n\n  this.user = function (uid) {\n    return _this.db.collection(\"users\").doc(uid);\n  };\n\n  this.users = function () {\n    return _this.db.collection('users');\n  };\n\n  app.initializeApp(config);\n  this.auth = app.auth();\n  this.db = app.firestore();\n  this.db.settings({});\n} // *** Auth API ***\n;\n\nexport default Firebase;","map":{"version":3,"sources":["/home/lukebord/react/react-firebase-authentication/src/components/Firebase/firebase.js"],"names":["app","config","apiKey","process","env","REACT_APP_API_KEY","authDomain","REACT_APP_AUTH_DOMAIN","databaseURL","REACT_APP_DATABASE_URL","projectId","REACT_APP_PROJECT_ID","storageBucket","REACT_APP_STORAGE_BUCKET","messagingSenderId","REACT_APP_MESSAGING_SENDER_ID","Firebase","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","addUser","uid","username","db","collection","doc","set","user","users","initializeApp","firestore","settings"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,cAAhB;AACA,OAAO,eAAP;AACA,OAAO,mBAAP;AACA,OAAO,oBAAP;AAEA,IAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYC,iBADP;AAEbC,EAAAA,UAAU,EAAEH,OAAO,CAACC,GAAR,CAAYG,qBAFX;AAGbC,EAAAA,WAAW,EAAEL,OAAO,CAACC,GAAR,CAAYK,sBAHZ;AAIbC,EAAAA,SAAS,EAAEP,OAAO,CAACC,GAAR,CAAYO,oBAJV;AAKbC,EAAAA,aAAa,EAAET,OAAO,CAACC,GAAR,CAAYS,wBALd;AAMbC,EAAAA,iBAAiB,EAAEX,OAAO,CAACC,GAAR,CAAYW;AANlB,CAAf;;IASMC,Q,GACJ,oBAAc;AAAA;;AAAA;;AAAA,OAUfC,gCAVe,GAUoB,UAACC,KAAD,EAAQC,QAAR;AAAA,WAChC,KAAI,CAACC,IAAL,CAAUC,8BAAV,CAAyCH,KAAzC,EAAgDC,QAAhD,CADgC;AAAA,GAVpB;;AAAA,OAafG,4BAbe,GAagB,UAACJ,KAAD,EAAQC,QAAR;AAAA,WAC5B,KAAI,CAACC,IAAL,CAAUG,0BAAV,CAAqCL,KAArC,EAA4CC,QAA5C,CAD4B;AAAA,GAbhB;;AAAA,OAgBfK,SAhBe,GAgBH;AAAA,WAAM,KAAI,CAACJ,IAAL,CAAUK,OAAV,EAAN;AAAA,GAhBG;;AAAA,OAkBfC,eAlBe,GAkBG,UAAAR,KAAK;AAAA,WAAI,KAAI,CAACE,IAAL,CAAUO,sBAAV,CAAiCT,KAAjC,CAAJ;AAAA,GAlBR;;AAAA,OAoBdU,gBApBc,GAoBK,UAAAT,QAAQ;AAAA,WACzB,KAAI,CAACC,IAAL,CAAUS,WAAV,CAAsBC,cAAtB,CAAqCX,QAArC,CADyB;AAAA,GApBb;;AAAA,OAwBdY,OAxBc,GAwBJ,UAACC,GAAD,EAAMC,QAAN,EAAgBf,KAAhB;AAAA,WACR,KAAI,CAACgB,EAAL,CAAQC,UAAR,CAAmB,OAAnB,EAA4BC,GAA5B,CAAgCJ,GAAhC,EAAqCK,GAArC,CAAyC;AACvCnB,MAAAA,KAAK,EAAEA,KADgC;AAEvCe,MAAAA,QAAQ,EAAEA;AAF6B,KAAzC,CADQ;AAAA,GAxBI;;AAAA,OA8BdK,IA9Bc,GA8BP,UAAAN,GAAG;AAAA,WAAI,KAAI,CAACE,EAAL,CAAQC,UAAR,CAAmB,OAAnB,EAA4BC,GAA5B,CAAgCJ,GAAhC,CAAJ;AAAA,GA9BI;;AAAA,OAgCdO,KAhCc,GAgCN,YAAM;AAAE,WAAO,KAAI,CAACL,EAAL,CAAQC,UAAR,CAAmB,OAAnB,CAAP;AAAmC,GAhCrC;;AACZnC,EAAAA,GAAG,CAACwC,aAAJ,CAAkBvC,MAAlB;AAEF,OAAKmB,IAAL,GAAYpB,GAAG,CAACoB,IAAJ,EAAZ;AACE,OAAKc,EAAL,GAAUlC,GAAG,CAACyC,SAAJ,EAAV;AACA,OAAKP,EAAL,CAAQQ,QAAR,CAAiB,EAAjB;AAED,C,CAEF;;;AA0BD,eAAe1B,QAAf","sourcesContent":["import app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport 'firebase/firestore';\n\nconst config = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n};\n\nclass Firebase {\n  constructor() {\n    app.initializeApp(config);\n\n\t\tthis.auth = app.auth();\n    this.db = app.firestore();\n    this.db.settings({\n    });\n  }\n\n\t// *** Auth API ***\n\tdoCreateUserWithEmailAndPassword = (email, password) =>\n    this.auth.createUserWithEmailAndPassword(email, password);\n\n\tdoSignInWithEmailAndPassword = (email, password) =>\n    this.auth.signInWithEmailAndPassword(email, password);\n\n\tdoSignOut = () => this.auth.signOut();\n\n\tdoPasswordReset = email => this.auth.sendPasswordResetEmail(email);\n\n  doPasswordUpdate = password =>\n    this.auth.currentUser.updatePassword(password);\n\n\t// *** User API ***\n  addUser = (uid, username, email) =>\n    this.db.collection(\"users\").doc(uid).set({\n      email: email,\n      username: username\n    });\n\n  user = uid => this.db.collection(\"users\").doc(uid);\n\n  users = () => { return this.db.collection('users')};\n}\n\nexport default Firebase;\n"]},"metadata":{},"sourceType":"module"}